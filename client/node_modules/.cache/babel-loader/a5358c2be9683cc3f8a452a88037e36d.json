{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Andrei's Course\\\\CRA\\\\E-commerce-CrownClothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state; // check password\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return; // exit\n      }\n\n      try {\n        // create new user\n        const {\n          user\n        } = await auth.createUserWithEmailAndPassword(email, password); // Send to firebase for firebase to get user data\n\n        await createUserProfileDocument(user, {\n          displayName\n        }); // if success > clear our form\n\n        this.setState({\n          displayName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n      } catch (err) {\n        // fail > err\n        const errCode = err.code;\n\n        if (errCode === 'auth/weak-password') {\n          this.setState({\n            passwordError: 'Password too short'\n          });\n        } else if (errCode === 'auth/email-already-in-use') {\n          this.setState({\n            passwordError: 'Email already in use'\n          });\n        } else if (errCode === 'auth/') console.log(err);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      passwordError: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword,\n      passwordError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\" // event.target.name\n      ,\n      value: displayName // event.target.value\n      ,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), passwordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","user","createUserWithEmailAndPassword","setState","err","errCode","code","passwordError","console","log","handleChange","name","value","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport './sign-up.styles.scss';\r\n\r\nclass SignUp extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        // check password\r\n        if(password !== confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n            return; // exit\r\n        }\r\n        try{\r\n            // create new user\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password)\r\n\r\n            // Send to firebase for firebase to get user data\r\n            await createUserProfileDocument(user, {displayName});\r\n            // if success > clear our form\r\n            this.setState({\r\n                displayName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: ''\r\n            })\r\n        }catch(err){\r\n            // fail > err\r\n            const errCode = err.code;\r\n            if(errCode === 'auth/weak-password'){\r\n                this.setState({passwordError: 'Password too short'})\r\n            }else if(errCode === 'auth/email-already-in-use'){\r\n                this.setState({passwordError: 'Email already in use'})\r\n            }else if(errCode === 'auth/')  \r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleChange = event =>{\r\n        const { name, value } = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        const { displayName, email, password, confirmPassword, passwordError } = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'   // event.target.name\r\n                        value={displayName}  // event.target.value\r\n                        onChange={this.handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n                    {passwordError && <p className='error'>{this.state.passwordError}</p>}\r\n                    <CustomButton type='submit'>Sign Up</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}