{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Andrei's Course\\\\CRA\\\\E-commerce-CrownClothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      const {\n        signUpStart\n      } = this.props; // check password\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return; // exit\n      }\n\n      try {\n        // // create new user\n        // const { user } = await auth.createUserWithEmailAndPassword(email, password)\n        // // Send to firebase for firebase to get user data\n        // await createUserProfileDocument(user, {displayName});\n        // // if success > clear our form\n        // this.setState({\n        //     displayName: '',\n        //     email: '',\n        //     password: '',\n        //     confirmPassword: '',\n        //     passwordError: ''\n        // })\n        signUpStart({\n          displayName,\n          email,\n          password\n        });\n      } catch (err) {\n        // fail > err\n        const errCode = err.code;\n\n        if (errCode === 'auth/weak-password') {\n          this.setState({\n            passwordError: 'Password too short'\n          });\n        } else if (errCode === 'auth/email-already-in-use') {\n          this.setState({\n            passwordError: 'Email already in use'\n          });\n        } else if (errCode === 'auth/invalid-email') {\n          this.setState({\n            passwordError: 'The email address is badly formatted'\n          });\n        } else if (errCode === 'auth/operation-not-allowed') {\n          this.setState({\n            passwordError: 'Email / password accounts are not enabled'\n          });\n        }\n\n        console.log(err);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      passwordError: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword,\n      passwordError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\"\n      /* event.target.name */\n      ,\n      value: displayName\n      /* event.target.value */\n      ,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), passwordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 39\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"c\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","signUpStart","SignUp","constructor","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","props","alert","err","errCode","code","setState","passwordError","console","log","handleChange","name","value","target","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,WAAW,GAAE;AACT;;AADS,SAWbC,YAXa,GAWE,MAAMC,KAAN,IAAe;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,QAAtB;AAAgCC,QAAAA;AAAhC,UAAoD,KAAKC,KAA/D;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAkB,KAAKW,KAA7B,CAH0B,CAI1B;;AACA,UAAGH,QAAQ,KAAKC,eAAhB,EAAgC;AAC5BG,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACA,eAF4B,CAEpB;AACX;;AACD,UAAG;AACC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ,QAAAA,WAAW,CAAC;AAAEM,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA;AAAtB,SAAD,CAAX;AACH,OAfD,CAeC,OAAMK,GAAN,EAAU;AACP;AACA,cAAMC,OAAO,GAAGD,GAAG,CAACE,IAApB;;AACA,YAAGD,OAAO,KAAK,oBAAf,EAAoC;AAChC,eAAKE,QAAL,CAAc;AAACC,YAAAA,aAAa,EAAE;AAAhB,WAAd;AACH,SAFD,MAEM,IAAGH,OAAO,KAAK,2BAAf,EAA2C;AAC7C,eAAKE,QAAL,CAAc;AAACC,YAAAA,aAAa,EAAE;AAAhB,WAAd;AACH,SAFK,MAEA,IAAGH,OAAO,KAAK,oBAAf,EAAoC;AACtC,eAAKE,QAAL,CAAc;AAACC,YAAAA,aAAa,EAAE;AAAhB,WAAd;AACH,SAFK,MAEA,IAAGH,OAAO,KAAK,4BAAf,EAA4C;AAC9C,eAAKE,QAAL,CAAc;AAACC,YAAAA,aAAa,EAAE;AAAhB,WAAd;AACH;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH;AACJ,KAjDY;;AAAA,SAmDbO,YAnDa,GAmDEhB,KAAK,IAAG;AACnB,YAAM;AAAEiB,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBlB,KAAK,CAACmB,MAA9B;AACA,WAAKP,QAAL,CAAc;AAAC,SAACK,IAAD,GAAQC;AAAT,OAAd;AACH,KAtDY;;AAET,SAAKZ,KAAL,GAAa;AACTJ,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,eAAe,EAAE,EAJR;AAKTQ,MAAAA,aAAa,EAAE;AALN,KAAb;AAOH;;AA+CDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAElB,MAAAA,WAAF;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,eAAhC;AAAiDQ,MAAAA;AAAjD,QAAmE,KAAKP,KAA9E;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,eAGI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAE,KAAKP,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC;AAAgB;AAFzB;AAGI,MAAA,KAAK,EAAEG;AAAc;AAHzB;AAII,MAAA,QAAQ,EAAE,KAAKc,YAJnB;AAKI,MAAA,KAAK,EAAC,cALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eASI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAEb,KAHX;AAII,MAAA,QAAQ,EAAE,KAAKa,YAJnB;AAKI,MAAA,KAAK,EAAC,OALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,eAiBI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAEZ,QAHX;AAII,MAAA,QAAQ,EAAE,KAAKY,YAJnB;AAKI,MAAA,KAAK,EAAC,UALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,eAyBI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,KAAK,EAAEX,eAHX;AAII,MAAA,QAAQ,EAAE,KAAKW,YAJnB;AAKI,MAAA,KAAK,EAAC,kBALV;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,EAiCKH,aAAa,iBAAI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKP,KAAL,CAAWO,aAAjC,CAjCtB,eAkCI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlCJ,CAHJ,CADJ;AA0CH;;AArG0B;;AAwG/B,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACpC1B,EAAAA,WAAW,EAAE2B,eAAe,IAAID,QAAQ,CAAC1B,WAAW,CAAC2B,eAAD,CAAZ;AADJ,CAAL,CAAnC;;AAIA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCxB,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\nimport './sign-up.styles.scss';\r\n\r\nclass SignUp extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { displayName, email, password, confirmPassword } = this.state;\r\n        const { signUpStart } = this.props;\r\n        // check password\r\n        if(password !== confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n            return; // exit\r\n        }\r\n        try{\r\n            // // create new user\r\n            // const { user } = await auth.createUserWithEmailAndPassword(email, password)\r\n\r\n            // // Send to firebase for firebase to get user data\r\n            // await createUserProfileDocument(user, {displayName});\r\n            // // if success > clear our form\r\n            // this.setState({\r\n            //     displayName: '',\r\n            //     email: '',\r\n            //     password: '',\r\n            //     confirmPassword: '',\r\n            //     passwordError: ''\r\n            // })\r\n            signUpStart({ displayName, email, password })\r\n        }catch(err){\r\n            // fail > err\r\n            const errCode = err.code;\r\n            if(errCode === 'auth/weak-password'){\r\n                this.setState({passwordError: 'Password too short'})\r\n            }else if(errCode === 'auth/email-already-in-use'){\r\n                this.setState({passwordError: 'Email already in use'})\r\n            }else if(errCode === 'auth/invalid-email'){\r\n                this.setState({passwordError: 'The email address is badly formatted'})\r\n            }else if(errCode === 'auth/operation-not-allowed'){\r\n                this.setState({passwordError: 'Email / password accounts are not enabled'})\r\n            }\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleChange = event =>{\r\n        const { name, value } = event.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    render(){\r\n        const { displayName, email, password, confirmPassword, passwordError } = this.state;\r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>I do not have an account</h2>\r\n                <span>Sign up with your email and password</span>\r\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'   /* event.target.name */\r\n                        value={displayName}  /* event.target.value */\r\n                        onChange={this.handleChange}\r\n                        label='Display Name'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        label='Email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n                    {passwordError && <p className='error'>{this.state.passwordError}</p>}\r\n                    <CustomButton type='submit'>c</CustomButton>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}