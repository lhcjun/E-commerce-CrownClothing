{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Andrei's Course\\\\CRA\\\\E-commerce-CrownClothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport Logo from \"../../assets/logo.svg\";\nimport { clearCartAfterPay } from \"../../redux/cart/cart.actions\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCartAfterPayment\n}) => {\n  const priceForStript = price * 100; // cents = dollars * 100\n\n  const publishableKey = \"pk_test_HpdrfhAH2rIpZrDUnAYzcJN300RaDSqqJJ\";\n\n  const onToken = token => {\n    // console.log(token);\n    axios({\n      // 放入 req 相關資訊 > 回傳 promise\n      url: \"payment\",\n      // axios 會自動知道要向 /payment 來 req\n      method: 'post',\n      data: {\n        // 要傳過去的 data\n        amount: priceForStript,\n        token\n      }\n    }).then(res => {\n      alert('Payment Successful');\n      clearCartAfterPayment();\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment. Please make sure you use the provided credit card');\n    });\n  }; // 如果沒在前面用 .json() 處理，就在這裡用 JSON parse\n\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Crown Clothing Ltd.\",\n    shippingAddress: true,\n    billingAddress: true,\n    image: Logo,\n    description: `Your total is $${price}`,\n    amount: priceForStript\n    /* cents */\n    ,\n    panelLabel: \"Pay Now\",\n    token: onToken\n    /* submit -> callback */\n    ,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCartAfterPayment: () => dispatch(clearCartAfterPay())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","connect","StripeCheckout","axios","clearCartAfterPay","StripeCheckoutButton","price","clearCartAfterPayment","priceForStript","publishableKey","onToken","token","url","method","data","amount","then","res","alert","catch","error","console","log","JSON","parse","Logo","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsC;AACjE,QAAMC,cAAc,GAAGF,KAAK,GAAG,GAA/B,CADiE,CAC7B;;AACpC,QAAMG,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACAR,IAAAA,KAAK,CAAC;AACJ;AACAS,MAAAA,GAAG,EAAE,SAFD;AAEY;AAChBC,MAAAA,MAAM,EAAE,MAHJ;AAIJC,MAAAA,IAAI,EAAE;AAAQ;AACZC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA;AAFI;AAJF,KAAD,CAAL,CASGK,IATH,CASQC,GAAG,IAAI;AACXC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAX,MAAAA,qBAAqB;AACtB,KAZH,EAaGY,KAbH,CAaSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CAAC,yFAAD,CAAL;AACD,KAhBH;AAiBD,GAnBD,CAJiE,CAuB7D;;;AAEJ,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,cAAc,MAJhB;AAKE,IAAA,KAAK,EAAEO,IALT;AAME,IAAA,WAAW,EAAG,kBAAiBnB,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEE;AAAgB;AAP1B;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE;AAAS;AATlB;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAvCD;;AAyCA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,qBAAqB,EAAE,MAAMoB,QAAQ,CAACvB,iBAAiB,EAAlB;AADG,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCrB,oBAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\n\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport { clearCartAfterPay } from \"../../redux/cart/cart.actions\";\r\n\r\nconst StripeCheckoutButton = ({ price, clearCartAfterPayment }) => {\r\n  const priceForStript = price * 100; // cents = dollars * 100\r\n  const publishableKey = \"pk_test_HpdrfhAH2rIpZrDUnAYzcJN300RaDSqqJJ\";\r\n\r\n  const onToken = (token) => {\r\n    // console.log(token);\r\n    axios({\r\n      // 放入 req 相關資訊 > 回傳 promise\r\n      url: \"payment\", // axios 會自動知道要向 /payment 來 req\r\n      method: 'post',\r\n      data: {       // 要傳過去的 data\r\n        amount: priceForStript,\r\n        token\r\n      }\r\n    })\r\n      .then(res => {\r\n        alert('Payment Successful');\r\n        clearCartAfterPayment();\r\n      })\r\n      .catch(error => {\r\n        console.log('Payment error: ', JSON.parse(error));\r\n        alert('There was an issue with your payment. Please make sure you use the provided credit card');\r\n      })\r\n  };  // 如果沒在前面用 .json() 處理，就在這裡用 JSON parse\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label=\"Pay Now\"\r\n      name=\"Crown Clothing Ltd.\"\r\n      shippingAddress\r\n      billingAddress\r\n      image={Logo}\r\n      description={`Your total is $${price}`}\r\n      amount={priceForStript} /* cents */\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken} /* submit -> callback */\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  clearCartAfterPayment: () => dispatch(clearCartAfterPay()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\r\n"]},"metadata":{},"sourceType":"module"}