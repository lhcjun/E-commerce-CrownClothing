{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Andrei's Course\\\\CRA\\\\E-commerce-CrownClothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        // check email & password\n        await auth.signInWithEmailAndPassword(email, password); // if success > clear our form\n\n        this.setState({\n          email: '',\n          password: '',\n          passwordError: ''\n        });\n      } catch (err) {\n        const errCode = err.code;\n\n        if (errCode === 'auth/wrong-password') {\n          this.setState({\n            passwordError: 'Invalid email or password'\n          });\n        } else if (errCode === 'auth/user-not-found') {\n          this.setState({\n            passwordError: 'Invalid email or password'\n          });\n        }\n\n        console.log(err);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordError: ''\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      passwordError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\"\n      /* event.target.name */\n      ,\n      value: email\n      /* event.target.value */\n      ,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), passwordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }\n    }, passwordError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      type: \"button\",\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","passwordError","err","errCode","code","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart } from '../../redux/user/user.actions';\r\nimport './sign-in.styles.scss';\r\n\r\nclass SignIn extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            passwordError: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n        try{\r\n            // check email & password\r\n            await auth.signInWithEmailAndPassword(email, password);\r\n            // if success > clear our form\r\n            this.setState({ email: '', password: '', passwordError: '' })\r\n        }catch(err){\r\n            const errCode = err.code;\r\n            if(errCode === 'auth/wrong-password'){\r\n                this.setState({passwordError: 'Invalid email or password'})\r\n            }else if(errCode === 'auth/user-not-found'){\r\n                this.setState({passwordError: 'Invalid email or password'})\r\n            }\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { value, name } = event.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    render(){\r\n        const { email, password, passwordError } = this.state;\r\n        return(\r\n            <div className='sign-in'>\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput \r\n                        id='email'\r\n                        type='email' \r\n                        name='email'   /* event.target.name */\r\n                        value={email}  /* event.target.value */\r\n                        required \r\n                        handleChange={this.handleChange}\r\n                        label='email'\r\n                    />\r\n                    <FormInput\r\n                        id='password'\r\n                        type='password' \r\n                        name='password' \r\n                        value={password} \r\n                        required \r\n                        handleChange={this.handleChange}\r\n                        label='password'\r\n                    />\r\n                    {passwordError && <p className='error'>{passwordError}</p>}\r\n                    <div className='buttons'>\r\n                        <CustomButton type='submit'> Sign In </CustomButton>\r\n                        <CustomButton onClick={signInWithGoogle} type='button' isGoogleSignIn >\r\n                            Sign In With Google \r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}