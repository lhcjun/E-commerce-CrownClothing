{"ast":null,"code":"import { createSelector } from 'reselect'; // get shop reducer\n\nconst selectShop = state => state.shop; // get collections state from shop reducer\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // get collections obj value -> array  (CollectionsOverview)\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // or  Object.values(collections)   value array\n// pass url params(string value) -> collections state obj -> get corresponding obj (hats)\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null); // (CollectionPage)\n// create loading state (ShopPage)\n\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching); // create collections finish loaded state (null / obj)  (ShopPage)\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC,C,CAKP;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErDC,WAAW,IACPA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHrB,CAAlD,C,CAIa;AAGpB;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAIZ,cAAc,CAChE,CAACI,iBAAD,CADgE,EAEhEC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFC,CAA7D,C,CAGH;AAGJ;;AACA,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD,C,CAKP;;AACA,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACnD,CAACC,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\n// get shop reducer\r\nconst selectShop = state => state.shop;\r\n\r\n// get collections state from shop reducer\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n)\r\n\r\n// get collections obj value -> array  (CollectionsOverview)\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => \r\n        collections ? Object.keys(collections).map(key => collections[key]) : []\r\n)                   // or  Object.values(collections)   value array\r\n\r\n\r\n// pass url params(string value) -> collections state obj -> get corresponding obj (hats)\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => collections ? collections[collectionUrlParam] : null\r\n)   // (CollectionPage)\r\n\r\n\r\n// create loading state (ShopPage)\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\n// create collections finish loaded state (null / obj)  (ShopPage)\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n)"]},"metadata":{},"sourceType":"module"}