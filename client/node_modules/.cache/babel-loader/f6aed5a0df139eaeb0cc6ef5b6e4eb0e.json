{"ast":null,"code":"const express = require('express');\n\nconst cors = require('cors');\n\nconst bodyParser = require('body-parser');\n\nconst path = require('path');\n\nif (process.env.NODE_ENV !== 'production') require('dotenv').config();\n\nconst stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\n\nconst app = express();\nconst port = process.env.PORT || 5000;\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(cors());\n\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(path.join(__dirname, 'client/build')));\n  app.get('*', function (req, res) {\n    res.sendFile(path.join(__dirname, 'client/build', 'index.html'));\n  });\n}\n\napp.listen(port, error => {\n  if (error) throw error;\n  console.log('Server running on port ' + port);\n});\napp.post('/payment', (req, res) => {\n  const body = {\n    source: req.body.token.id,\n    amount: req.body.amount,\n    currency: 'usd'\n  };\n  stripe.charges.create(body, (stripeErr, stripeRes) => {\n    if (stripeErr) {\n      res.status(500).send({\n        error: stripeErr\n      });\n    } else {\n      res.status(200).send({\n        success: stripeRes\n      });\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["express","require","cors","bodyParser","path","process","env","NODE_ENV","config","stripe","STRIPE_SECRET_KEY","app","port","PORT","use","json","urlencoded","extended","static","join","__dirname","get","req","res","sendFile","listen","error","console","log","post","body","source","token","id","amount","currency","charges","create","stripeErr","stripeRes","status","send","success"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CN,OAAO,CAAC,QAAD,CAAP,CAAkBO,MAAlB;;AAE3C,MAAMC,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAP,CAAkBI,OAAO,CAACC,GAAR,CAAYI,iBAA9B,CAAf;;AAEA,MAAMC,GAAG,GAAGX,OAAO,EAAnB;AACA,MAAMY,IAAI,GAAGP,OAAO,CAACC,GAAR,CAAYO,IAAZ,IAAoB,IAAjC;AAEAF,GAAG,CAACG,GAAJ,CAAQX,UAAU,CAACY,IAAX,EAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQX,UAAU,CAACa,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAN,GAAG,CAACG,GAAJ,CAAQZ,IAAI,EAAZ;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCI,EAAAA,GAAG,CAACG,GAAJ,CAAQd,OAAO,CAACkB,MAAR,CAAed,IAAI,CAACe,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR;AAEAT,EAAAA,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9BA,IAAAA,GAAG,CAACC,QAAJ,CAAapB,IAAI,CAACe,IAAL,CAAUC,SAAV,EAAqB,cAArB,EAAqC,YAArC,CAAb;AACD,GAFD;AAGD;;AAEDT,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAiBc,KAAK,IAAI;AACxB,MAAIA,KAAJ,EAAW,MAAMA,KAAN;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BhB,IAAxC;AACD,CAHD;AAKAD,GAAG,CAACkB,IAAJ,CAAS,UAAT,EAAqB,CAACP,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAMO,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAET,GAAG,CAACQ,IAAJ,CAASE,KAAT,CAAeC,EADZ;AAEXC,IAAAA,MAAM,EAAEZ,GAAG,CAACQ,IAAJ,CAASI,MAFN;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GAAb;AAMA1B,EAAAA,MAAM,CAAC2B,OAAP,CAAeC,MAAf,CAAsBP,IAAtB,EAA4B,CAACQ,SAAD,EAAYC,SAAZ,KAA0B;AACpD,QAAID,SAAJ,EAAe;AACbf,MAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEf,QAAAA,KAAK,EAAEY;AAAT,OAArB;AACD,KAFD,MAEO;AACLf,MAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAEH;AAAX,OAArB;AACD;AACF,GAND;AAOD,CAdD","sourcesContent":["const express = require('express');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\nconst path = require('path');\r\n\r\nif (process.env.NODE_ENV !== 'production') require('dotenv').config();\r\n\r\nconst stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 5000;\r\n\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\napp.use(cors());\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  app.use(express.static(path.join(__dirname, 'client/build')));\r\n\r\n  app.get('*', function(req, res) {\r\n    res.sendFile(path.join(__dirname, 'client/build', 'index.html'));\r\n  });\r\n}\r\n\r\napp.listen(port, error => {\r\n  if (error) throw error;\r\n  console.log('Server running on port ' + port);\r\n});\r\n\r\napp.post('/payment', (req, res) => {\r\n  const body = {\r\n    source: req.body.token.id,\r\n    amount: req.body.amount,\r\n    currency: 'usd'\r\n  };\r\n\r\n  stripe.charges.create(body, (stripeErr, stripeRes) => {\r\n    if (stripeErr) {\r\n      res.status(500).send({ error: stripeErr });\r\n    } else {\r\n      res.status(200).send({ success: stripeRes });\r\n    }\r\n  });\r\n});"]},"metadata":{},"sourceType":"module"}