{"ast":null,"code":"// pull out from cart reducer\n// add one new item to cartItems state\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // existing items & new\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // each\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem // each item\n    );\n  } // not existing > add new item\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }]; // create quantity\n}; // all items      new item\n// remove one item from cartItems state\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  // existing items & remove one\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // quantity = 1\n\n  if (existingCartItem.quantity === 1) {\n    // clear item from cart  >  keep the ones don't match (new array)\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // quantity > 1 or not existing\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAAG;AAC1D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB,CADuD,CAGrD;;AAEF,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACE,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADF,GAEEH,QAHC,CAGW;AAHX,KAAP;AAKH,GAXsD,CAYvD;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP,CAbuD,CAaE;AAC5D,CAdM,C,CAcK;AAGZ;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAAE;AACjE,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EADxB,CAAzB,CAD+D,CAK/D;;AACA,MAAGH,gBAAgB,CAACK,QAAjB,KAA8B,CAAjC,EAAmC;AAC/B;AACA,WAAOP,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAA9D,CAAP;AACH,GAT8D,CAW/D;;;AACA,SAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACE,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADF,GAEEH,QAHC,CAAP;AAKH,CAjBM","sourcesContent":["// pull out from cart reducer\r\n\r\n// add one new item to cartItems state\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {  // existing items & new\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToAdd.id\r\n    ) // each\r\n\r\n    if(existingCartItem){\r\n        return cartItems.map(cartItem => \r\n            cartItem.id === cartItemToAdd.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n            : cartItem    // each item\r\n        )\r\n    }\r\n    // not existing > add new item\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]   // create quantity\r\n}           // all items      new item\r\n\r\n\r\n// remove one item from cartItems state\r\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => { // existing items & remove one\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToRemove.id\r\n    )\r\n\r\n    // quantity = 1\r\n    if(existingCartItem.quantity === 1){\r\n        // clear item from cart  >  keep the ones don't match (new array)\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n    }\r\n\r\n    // quantity > 1 or not existing\r\n    return cartItems.map(cartItem => \r\n        cartItem.id === cartItemToRemove.id\r\n        ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n        : cartItem\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}