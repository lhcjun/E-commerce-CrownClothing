{"ast":null,"code":"import { all, call, takeLatest, put } from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { clearCart } from './cart.actions';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* clearCartAfterPayment() {\n  yield put(clearCart());\n} // base saga - sign out > clear cart\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n} // base saga - payment success > clear cart\n\nexport function* onPaymentSuccess() {\n  yield takeLatest(CartActionTypes.PAYMENT_SUCCESS, clearCartAfterPayment);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onPaymentSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/client/src/redux/cart/cart.sagas.js"],"names":["all","call","takeLatest","put","UserActionTypes","CartActionTypes","clearCart","clearCartOnSignOut","clearCartAfterPayment","onSignOutSuccess","SIGN_OUT_SUCCESS","onPaymentSuccess","PAYMENT_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAGA,OAAO,UAAUC,kBAAV,GAA8B;AACjC,QAAMJ,GAAG,CAACG,SAAS,EAAV,CAAT;AACH;AAED,OAAO,UAAUE,qBAAV,GAAiC;AACpC,QAAML,GAAG,CAACG,SAAS,EAAV,CAAT;AACH,C,CAED;;AACA,OAAO,UAAUG,gBAAV,GAA4B;AAC/B,QAAMP,UAAU,CAACE,eAAe,CAACM,gBAAjB,EAAmCH,kBAAnC,CAAhB;AACH,C,CAED;;AACA,OAAO,UAAUI,gBAAV,GAA6B;AAChC,QAAMT,UAAU,CAACG,eAAe,CAACO,eAAjB,EAAkCJ,qBAAlC,CAAhB;AACH;AAED,OAAO,UAAUK,SAAV,GAAqB;AACxB,QAAMb,GAAG,CAAC,CACNC,IAAI,CAACQ,gBAAD,CADE,EAENR,IAAI,CAACU,gBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, call, takeLatest, put } from 'redux-saga/effects';\r\nimport UserActionTypes from '../user/user.types';\r\nimport CartActionTypes from './cart.types';\r\nimport { clearCart } from './cart.actions';\r\n\r\n\r\nexport function* clearCartOnSignOut(){\r\n    yield put(clearCart());\r\n}\r\n\r\nexport function* clearCartAfterPayment(){\r\n    yield put(clearCart());\r\n}\r\n\r\n// base saga - sign out > clear cart\r\nexport function* onSignOutSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\r\n}\r\n\r\n// base saga - payment success > clear cart\r\nexport function* onPaymentSuccess() {\r\n    yield takeLatest(CartActionTypes.PAYMENT_SUCCESS, clearCartAfterPayment);\r\n}\r\n\r\nexport function* cartSagas(){\r\n    yield all([\r\n        call(onSignOutSuccess),\r\n        call(onPaymentSuccess)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}