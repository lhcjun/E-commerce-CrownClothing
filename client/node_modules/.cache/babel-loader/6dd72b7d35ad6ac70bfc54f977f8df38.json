{"ast":null,"code":"import { createSelector } from 'reselect'; // collections state - map the string value to id\n\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n}; // get shop reducer\n\nconst selectShop = state => state.shop; // get collections state from shop reducer\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // convert url params -> id number (collections state)\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]));","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE,CADgB;AAEtBC,EAAAA,QAAQ,EAAE,CAFY;AAGtBC,EAAAA,OAAO,EAAE,CAHa;AAItBC,EAAAA,MAAM,EAAE,CAJc;AAKtBC,EAAAA,IAAI,EAAE;AALgB,CAA1B,C,CAQA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGV,cAAc,CAC3C,CAACO,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAAIb,cAAc,CAChE,CAACU,iBAAD,CADgE,EAEhEC,WAAW,IAAIA,WAAW,CAACG,IAAZ,CACXC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBf,iBAAiB,CAACY,kBAAD,CADtC,CAFiD,CAA7D","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\n// collections state - map the string value to id\r\nconst COLLECTION_ID_MAP = {\r\n    hats: 1,\r\n    sneakers: 2,\r\n    jackets: 3,\r\n    womens: 4,\r\n    mens: 5\r\n}\r\n\r\n// get shop reducer\r\nconst selectShop = state => state.shop;\r\n\r\n// get collections state from shop reducer\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n)\r\n\r\n// convert url params -> id number (collections state)\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => collections.find(\r\n        collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\r\n    )\r\n)"]},"metadata":{},"sourceType":"module"}