{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions'; // sign in with google\n\nexport function* signInWithGoogle() {\n  // SignIn.jsx 裡的 button onClick={signInWithGoogle}\n  // firebase.utils 方法   export const signInWithGoogle = () => auth.signInWithPopup(provider);\n  // 因為沒有要用 auth.onAuthStateChanged 所以要把 googleProvider 移進來\n  // 放入 App.js componentDidMount 的 code\n  try {\n    // const signInWithGoogle = () => auth.signInWithPopup(provider);  (firebase.utils 方法)\n    // 不用 function 是因為要取得 success 回傳的 value\n    // 從回傳的 obj 裡取出 user 屬性 > 解構\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); // get document reference back from firebase.utils\n\n    const userRef = yield call(createUserProfileDocument, user); //  Get user actual data (snapShot)\n\n    const userSnapshot = yield userRef.get(); // dispatch > set state > sign in put = put things back into redux flow\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n} // 監聽 googleSignInState > 觸發 actual sign form\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_PENDING, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/Andrei's Course/CRA/E-commerce-CrownClothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_PENDING","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD,C,CAGA;;AACA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B;AACJ;AACA;AACA;AACI,MAAG;AACC;AACA;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAAvB,CAJD,CAKC;;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BI,IAA5B,CAA1B,CAND,CAOC;;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CARD,CASC;;AACA,UAAMd,GAAG,CAACO,mBAAmB,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GAXD,CAWE,OAAMC,KAAN,EAAY;AACV,UAAMjB,GAAG,CAACQ,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACH;AACJ,C,CAGD;;AACA,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,sBAAjB,EAAyCV,gBAAzC,CAAhB;AACH;AAED,OAAO,UAAUW,SAAV,GAAsB;AACzB,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACgB,mBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport { googleSignInSuccess, googleSignInFailure } from './user.actions';\r\n\r\n\r\n// sign in with google\r\nexport function* signInWithGoogle(){\r\n    // SignIn.jsx 裡的 button onClick={signInWithGoogle}\r\n// firebase.utils 方法   export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// 因為沒有要用 auth.onAuthStateChanged 所以要把 googleProvider 移進來\r\n// 放入 App.js componentDidMount 的 code\r\n    try{\r\n        // const signInWithGoogle = () => auth.signInWithPopup(provider);  (firebase.utils 方法)\r\n        // 不用 function 是因為要取得 success 回傳的 value\r\n        // 從回傳的 obj 裡取出 user 屬性 > 解構\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        // get document reference back from firebase.utils\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        //  Get user actual data (snapShot)\r\n        const userSnapshot = yield userRef.get();\r\n        // dispatch > set state > sign in put = put things back into redux flow\r\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(error){\r\n        yield put(googleSignInFailure(error))\r\n    }\r\n}\r\n\r\n\r\n// 監聽 googleSignInState > 觸發 actual sign form\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_PENDING, signInWithGoogle)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}